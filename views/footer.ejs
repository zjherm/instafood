<script src="/socket.io/socket.io.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="/js/jquery-ui-1.10.4.custom.js"></script>
<script>
$(function() {
  $( "#tabs" ).tabs();
});
</script>
<script type="text/javascript"
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDiG9_G2je7aqBZnjskcTTILnhesRGQS4E&sensor=false">
</script>
<script>
var socket = io.connect();
socket.on('photo', function (data) {
  var igComments = [];
  for (var i = 0, commentLength = data.comments.length; i < commentLength; i++) {
    igComments.push(
      '<div class="comment-box"><span class="commenter">' + data.comments[i].from.username + '</span>' +
      '<span class="comment">' + data.comments[i].text + '</span></div>'
    )
  }
  var igBox = 
  '<div class="post-box">' +
    '<a href="' + data.url + '">' + 
      '<img src="' + data.img + '">' + 
    '</a>' + 
    '<div class="userinfo">' +
      '<img src="' + data.userpic + '">' + 
      '<span class="name">' + data.username + '</span>' +
      '<span class="caption">' + data.caption + '</span>' +
    '</div>' +
    '<div class="comments">' + igComments.join('') + '</div>' +
  '</div>';

  $('#latest-post').prepend(igBox).fadeIn(500);
});
</script>
<script type="text/javascript">

// Standard Google Map call begin
    function initialize() {

      var styles = [
        {
          "featureType": "landscape",
          "stylers": [
            { "color": "#808080" },
            { "visibility": "simplified" }
          ]
        },{
          "featureType": "administrative",
          "elementType": "labels.text.fill",
          "stylers": [
            { "weight": 0.1 },
            { "lightness": 100 },
            { "visibility": "off" }
          ]
        },{
        }
      ];
      // Create a new StyledMapType object, passing it the array of styles,
      // as well as the name to be displayed on the map type control.
      var styledMap = new google.maps.StyledMapType(styles,{name: "Zacks Styles"});

      var mapOptions = {
        center: new google.maps.LatLng(32.71533, -117.15726),
        zoom: 9,
        scrollwheel: false,
        scaleControl: true,
        styles: styles
      };
      var map = new google.maps.Map(document.getElementById("map-canvas"),
        mapOptions);




      // Try HTML5 geolocation
      if(navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var pos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            map.setCenter(pos);
          }, function() {
            handleNoGeolocation(true);
          });

        // google.maps.event.addListener(map, 'bounds_changed', function() {
        //   console.log(
        //     "Center latitude: " + this.getCenter().lat() + 
        //     " longitude: " + this.getCenter().lng() +
        //     " Southwest lat: " + this.getBounds().getSouthWest().lat() + 
        //     " Southwest lng: " + this.getBounds().getSouthWest().lng() + 
        //     " Northeast lat: " + this.getBounds().getNorthEast().lat() + 
        //     " Northeast lng: " + this.getBounds().getNorthEast().lng()
        //     );
        // });




        var socket = io.connect();
        socket.on('photo', function (data) {
          var currentLat = data.lat;
          var currentLng = data.long;

          google.maps.event.addListener(map, 'bounds_changed', function() {
            var southWestLat = map.getBounds().getSouthWest().lat();
            var southwestLng = map.getBounds().getSouthWest().lng();
            var northEastLat = map.getBounds().getNorthEast().lat();
            var northEastLng = map.getBounds().getNorthEast().lng();
            if (currentLat > southWestLat && currentLat < northEastLat && currentLng > southWestLng && currentLng < northEastLng) {
              var icon = {
                 url: data.img, // url
                 size: new google.maps.Size(80, 80), // size
              };
              marker = new google.maps.Marker({
                 position:  new google.maps.LatLng(data.lat, data.long),
                 draggable: true,
                 animation: google.maps.Animation.DROP,
                 icon: icon,
                 map: map,
                 title: data.caption
              });
            } // endif
          });
        });

        } else {
          // Browser doesn't support Geolocation
          handleNoGeolocation(false);
        }
      }

      function handleNoGeolocation(errorFlag) {
        if (errorFlag) {
          var content = 'Error: The Geolocation service failed.';
        } else {
          var content = 'Error: Your browser doesn\'t support geolocation.';
        }

        var options = {
          map: map,
          position: new google.maps.LatLng(60, 105),
          content: content
        };

        var infowindow = new google.maps.InfoWindow(options);
        map.setCenter(options.position);

      }
      // Finally, call map
      google.maps.event.addDomListener(window, 'load', initialize);

</script>
</body>
</html>